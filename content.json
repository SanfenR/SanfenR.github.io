[{"title":"MarkDowm命令","date":"2016-12-06T03:50:30.000Z","path":"2016/12/06/MarkDowm/","text":"标题1234# 一级标题## 二级标题### 三级标题... 有序列表12341. 列表2. 列表3. 列表... 无序列表123* 列表* 列表* 列表 引用1&gt; 这是一个引用 链接与图片123[baidu](www.baidu.com)![icon](http://ohqvqufyf.bkt.clouddn.com/%E4%B8%8B%E8%BD%BD.jpeg) 字体123*这是斜体***这是粗体** 表格123| 表格1 | 表格2 ||--- |--- || 哈哈 | 呵呵 | code123void helloWorld()&#123; print(\"%s\", \"helloWorld\");&#125;","tags":[{"name":"MarkDowm","slug":"MarkDowm","permalink":"http://yoursite.com/tags/MarkDowm/"}]},{"title":"递归加法(day1)","date":"2016-12-06T03:50:30.000Z","path":"2016/12/06/everydayc/day1/","text":"题目：求1+2+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字以及条件判断语句（A?B:C).使用函数指针1234567891011121314151617//-----&gt;fun1 start//使用函数指针 递归加法typedef int (*fun)(int);int func1(int n) &#123; return 0;&#125;int func2(int n) &#123; fun f[2] = &#123;func1, func2&#125;; return n + f[(n != 0)](n - 1);&#125;void function1() &#123; cout &lt;&lt; func2(10) &lt;&lt; endl;&#125;//-----&gt;fun2 end 使用静态变量1234567891011121314151617181920212223242526272829//-----&gt;fun2 start//使用静态变量class test &#123; static int N; static int sum;public : test() &#123; sum += ++N; &#125; static void reset() &#123; N = sum = 0; &#125; static int getSum() &#123; return sum; &#125;&#125;;int test::N = 0;int test::sum = 0;void function2() &#123; test::reset(); test *p = new test[10]; cout &lt;&lt; test::getSum() &lt;&lt; endl; delete[]p;&#125;//---&gt;fun2 end 使用虚函数的编译多态性123456789101112131415161718192021222324//-----&gt;fun3 start//使用虚函数的编译多态性class A &#123;public: virtual int sum(int n) &#123; return 0; &#125;;&#125;;class B : public A &#123;public: int sum(int n) &#123; A a; B b; A *p[2] = &#123;&amp;a, &amp;b&#125;; return n + p[(n - 1 != 0)]-&gt;sum(n - 1); &#125;&#125;;void function3() &#123; B b; cout &lt;&lt; b.sum(10) &lt;&lt; endl;&#125;//-----&gt;fun3 end 源码github","tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"位运算计数(day1)","date":"2016-12-06T03:50:30.000Z","path":"2016/12/06/everydayc/day2/","text":"题目: 求整数的2进制表示中1的个数整数 右移 相与123456789int function1(int i) &#123; int count = 0; while(i) &#123; if(i &amp; 1) count ++; i = i &gt;&gt; 1; &#125; return count;&#125; flag 左移 相与1234567891011int function2(int i) &#123; int count = 0; unsigned int flag = 1; while(flag)&#123; if(i &amp; flag)&#123; count ++; &#125; flag = flag &lt;&lt; 1; &#125; return count;&#125; 减一相与12345678int function3(int i) &#123; int count = 0; while (i) &#123; ++ count; i = (i - 1) &amp; i; &#125; return count;&#125; 源码github","tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Vim-command","date":"2016-12-06T03:27:38.000Z","path":"2016/12/06/vim-command/","text":"光标移动 命令 作用 h,j,k,l 左 下 右 上 Ctrl+f 上一页 Ctrl+b 下一页 w,e,W,E 调到单词后面，小写包括标点 O 开启新的一行 ^ 一行的开始 gg 文档的结尾 [N]G 文档的第N行或者最后一行 插入模式 命令 作用 i 插入到光标前面 I 插入到行的开始位置 a 插入到光标的后面 A 插入到行的最后位置 o,O 新开一行 Esc 关闭插入模式 编辑 命令 作用 r 在插入模式替换光标所在的一个字符 J 合并下一行到上一行 s 删除光标所在的一个字符，光标还在当行 S 删除光标所在的一行, 光标还在当行，不同于dd u 撤销上一步操作 ctrl+r 恢复上一步操作 . 重复最后一个命令 ~ 变换为大写 [N]&gt;&gt; 一行或N行往右移动一个tab [N]&lt;&lt; 一行或N行往左移动一个tab 关闭 命令 作用 :q 保存 :wq, :x 保存并关闭 :q 关闭 :q! 强制关闭 搜索 命令 作用 /pattern 搜索(非插入模式) ?pattern 向后搜索 n 光标到达搜索结果的前一个目标 N 光标到达搜索结果的后一个目标 视觉模式 命令 模式 v 选中一个或多个字符 V 选中一行 剪切和复制 命令 作用 dd 删除一行 dw 删除一个单词 x 删除后一个字符 X 删除前一个字符 D 删除一行最后一个字符 [N]yy 复制一行或者N行 yw 复制一个单词 p 粘贴 窗口命令 命令 作用 : split 水平分割出一个窗口 :vsplit 垂直分割出一个窗口 :close 关闭窗口 ctrl+w 切换窗口 h,j,k,l 左下上右","tags":[{"name":"Vim","slug":"Vim","permalink":"http://yoursite.com/tags/Vim/"}]}]